# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python test

on:
  push:
  pull_request:
  release:

jobs:
  test:
    name: Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/dev-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
      - name: Lint with flake8 and Black
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
          black . --check --exclude "(docs|\.vscode|local)"
      - name: Test with pytest
        env:
          TRANSIP_USER: demo
        run: |
          pytest --cov=./ --cov-report=xml
      - name: Create distribution
        run: |
          python setup.py bdist_wheel
      - name: Upload coverage to Codecov
        env:
          PYTHON: ${{ matrix.python-version }}
        uses: codecov/codecov-action@v1
        with:
          files: ./coverage.xml
          directory: ./coverage/reports/
          flags: unittests
          env_vars: PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true
